plugins {
	id 'multimodule-config'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

dependencies {
	implementation project(":core")
    implementation project(":basic_nodes")

    // gson
    implementation 'com.google.code.gson:gson:2.10.1'

	// validation
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// argon2 for hashing passwords
	implementation group: 'org.springframework.security', name: 'spring-security-core', version: '6.0.1'
	implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.70'

	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    testImplementation project(":test_shared")

	// spring testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // GSON
    testImplementation 'com.google.code.gson:gson:2.10.1'
}

processResources {
    filesMatching('**/*') {
        expand getSecrets()
    }
}

static def getSecrets() {
    def secrets = new Properties()
    secrets.load(new FileInputStream("secrets.properties"))
    return secrets
}

tasks.named('test') {
	useJUnitPlatform()
}
